
resolver 127.0.0.11 valid=120s; # Valid for 2 minutes
resolver_timeout 1s; # Timeout for DNS resolver


upstream backendStorage {
	keepalive 32; # Keepalive connections to upstream servers
	keepalive_requests 1000; # Number of requests to send on a keepalive connection, to free memory
	zone upstream_dynamic 640k;

	server backend1.ahmet.engineer:8090 max_fails=2 weight=1 fail_timeout=1s ; # Faulty Server
	server images.unsplash.com:443 max_fails=2 weight=1 fail_timeout=1s;
	# server backup1.ahmet.engineer:8090 backup;
}


proxy_cache_path /var/www/cache levels=1:2 keys_zone=my-cache:8m max_size=1000m inactive=600m;
proxy_temp_path /var/www/cache/tmp;

server {
	listen 0.0.0.0:8080 default_server;
	listen [::]:8080 default_server;

	server_name tierOne;

	# Because it is behind a T2 server, we need to get the real IP
	add_header X-Real-IP $remote_addr;
	set_real_ip_from 10.0.0.0/8;
	real_ip_header X-Real-IP;

	location / {
		## Proxy to backend storage server, in this demo it is unsplash static image servers
		proxy_set_header Host images.unsplash.com;
		proxy_pass https://backendStorage;
		proxy_hide_header X-Served-By;

		##
		proxy_http_version 1.1;
		proxy_set_header Connection "";

		proxy_connect_timeout 1s;
		proxy_next_upstream_timeout 10s;


		# Do not return 5xx for first requests if the backend is down or rate limit exiceded, try another server or use stale cache
		proxy_next_upstream error timeout http_429 http_500 http_502 http_503 http_504; 
		proxy_cache_use_stale error timeout updating http_429 http_500 http_502 http_503 http_504;


		vhost_traffic_status_filter_by_set_key $upstream_addr upstream::backendStorage;


		proxy_cache my-cache;
		proxy_cache_key $uri$is_args$args;
		proxy_cache_valid 200 302 60m;
		proxy_cache_valid 404 301 1m;

		proxy_cache_revalidate off; # Dont check if cache is valid, wait until expiry or purge
		proxy_cache_min_uses 3; # Cache after number of request
		proxy_cache_background_update on;
		proxy_cache_lock on; # Locks the cache for a request until cached

		add_header X-Cache-T1 $upstream_cache_status;
		add_header X-Served-T1 $server_addr always;


	}

	location ~ /cdn-cgi/purge(/.*) {
		# allow 10.0.0.0/8;
		allow 172.16.0.0/12;
		allow 127.0.0.0/8;
		deny all;
		proxy_cache_purge my-cache $1$is_args$args;
	}

}

